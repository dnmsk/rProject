@using CommonUtils.ExtendedTypes
@using Project_B.CodeClientSide
@using Project_B.CodeClientSide.Enums
@using Project_B.CodeClientSide.Helper
@model Project_B.Models.StaticPageBaseModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    @RenderSection("Metatags", false)
    <title>@Model.StaticPageTransport.Title - @LanguageSiteHelper.Instance.GetText(Model.CurrentLanguage, SiteTextType.HeaderSiteName)</title>
    @if (!Model.StaticPageTransport.Keywords.IsNullOrEmpty()) {
        <meta name="keywords" content="@Model.StaticPageTransport.Keywords"/>
    }
    @if (!Model.StaticPageTransport.Description.IsNullOrEmpty()) {
        <meta name="description" content="@Model.StaticPageTransport.Description"/>
    }
    @SquishItMinifierStatic.Instance.MvcRenderCachedAssetTag()
</head>
<body>
    @SquishItMinifierStatic.Instance.MvcRenderCachedAssetTag(Model.AdditionHtmlAssets)
    <script type="text/javascript">
        window.ninjaBag.links = new window.ninjaBag.baseObjects.Store(@Html.Raw(
            Json.Encode(new {
                Log = new {
                    JsError = Url.Action("JsError", "Log"),
                    Feature = Url.Action("Feature", "Log")
                }
            })));
        window.ninjaBag.documentObjects.append(@Html.Raw(Json.Encode(new {
                Const = new {
                    CookieGmt = ProjectControllerBase.GMT_COOKIE_NAME
                }
            })));
    </script>
    @Html.Partial("_MainMenu", Model)
    <div class="container body-content" id="container">
        @Html.Raw(ExternalLinkHelper.Instance.ProcessStaticContentForExternalLink(Url, Model, Model.StaticPageTransport.Content))
        @RenderBody()
    </div>
    @Html.Partial("_Footer", Model)
    @Html.Partial("Statistics/YandexMetrika", Model)
    @Html.Partial("Statistics/GoogleAnalytics", Model)
    <script type="text/javascript">
        $(document).ready(function() {
            var keys = Object.keys(window.ninjaBag.functionsOnReady);
            for (var key in keys) {
                if (keys.hasOwnProperty(key)) {
                    var obj = window.ninjaBag.functionsOnReady[keys[key]];
                    if (typeof(obj) == "function") {
                        try {
                            obj();
                        } catch (ex) {
                            window.logError(ex, 'onload');
                        }
                    }
                }
            }
        });
    </script>
</body>
</html>