@using System.Web.Mvc.Html
@using CommonUtils.ExtendedTypes
@using Project_B.CodeClientSide.Enums
@using Project_B.CodeClientSide.Helper
@using Project_B.CodeClientSide.TransportType
@using Project_B.CodeServerSide.Enums
@using Project_B.Models
@model StaticPageBaseModel<Project_B.CodeClientSide.TransportType.CompetitionAdvancedTransport>
@{
    var sportType = Model.ControllerModel.CompetitionTransport.SportType;
    var competition = Model.ControllerModel.CompetitionTransport;
    Model.AdditionHtmlAssets.Add(BookmakerHtmlHelper.BOOKMAKER_S);
    var match = competition.CompetitionItems.First();
    var source = new {
        player1 = match.Competitor1.Name,
        player2 = match.Competitor2.Name,
        sporttype = competition.SportType,
        competition = competition.Name
    };
    Model.StaticPageTransport.Title = Model.StaticPageTransport.Title.HaackFormat(source);
    Model.StaticPageTransport.Description = Model.StaticPageTransport.Description.HaackFormat(source);
    Model.StaticPageTransport.Keywords = Model.StaticPageTransport.Keywords.HaackFormat(source);
}

@CompetitionDetailHelper.SportTypeNameHelper("Competition", sportType, Model.CurrentLanguage)
@CompetitionDetailHelper.CompetitionNameWriter("Competition", competition)
<div class="pull-right">
    <a class="active">Regular</a>
    @if (Model.ControllerModel.HaveLiveData) {
        <a href="@Url.Action("Game", "CompetitionLive", new { id = competition.CompetitionItems.First().CompetitionItemID})">Live</a>
    }
</div>
@Html.Partial("Element/_ListCompetitionUniqueWriter", Tuple.Create(competition, DisplayColumnType.All.FlagDrop(DisplayColumnType.Roi1X2)))

<div class="row">
    @BetOddRenderHelper.RenderRoiTable(Model.CurrentLanguage, sportType, competition)
</div>